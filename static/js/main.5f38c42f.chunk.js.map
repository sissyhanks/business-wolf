{"version":3,"sources":["components/Header.js","components/NavTabs.js","components/pages/About.js","components/pages/Portfolio.js","components/pages/Contact.js","components/Footer.js","webSites.js","assets/howl.jpg","assets/hunt.jpg","assets/pack.jpg","components/PortfolioContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","NavTabs","tab","changeTab","className","href","onClick","About","Portfolio","webSites","map","webSite","title","src","img","alt","description","Contact","useState","userName","setUserName","email","setEmail","message","setMessage","errorMessage","setErrorMessage","handleInputChange","e","target","inputType","name","inputValue","value","onChange","type","placeholder","preventDefault","alert","Footer","PortfolioContainer","setTab","page","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f38c42f.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Header = () => {\n  \n  return (\n    <div>\n      <h1>Business Wolf</h1>\n            {/* We are passing the currentPage from state and the function to update it */}\n      \n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react';\n\n// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\nfunction NavTabs({ tab, changeTab }) {\n  return (\n    <ul className=\"nav nav-tabs\">\n      <li className=\"nav-item\">\n        <a\n          href=\"#about\"\n          onClick={() => changeTab('About')}\n          // Check to see if the currentPage is `About`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={tab === 'About' ? 'nav-link active' : 'nav-link'}\n        >\n          About\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#portfolio\"\n          onClick={() => changeTab('Portfolio')}\n          // Check to see if the currentPage is `Portfolio`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={tab === 'Portfolio' ? 'nav-link active' : 'nav-link'}\n        >\n          Portfolio\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#contact\"\n          onClick={() => changeTab('Contact')}\n          // Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={tab === 'Contact' ? 'nav-link active' : 'nav-link'}\n        >\n          Contact\n        </a>\n      </li>\n    </ul>\n  );\n}\n\nexport default NavTabs;\n","import React from 'react';\n\nexport default function About() {\n  return (\n    <div>\n      <h1>About Page</h1>\n      <p>\n        Nunc pharetra finibus est at efficitur. Praesent sed congue diam.\n        Integer gravida dui mauris, ut interdum nunc egestas sed. Aenean sed\n        mollis diam. Nunc aliquet risus ac finibus porta. Nam quis arcu non\n        lectus tincidunt fermentum. Suspendisse aliquet orci porta quam semper\n        imperdiet. Praesent euismod mi justo, faucibus scelerisque risus cursus\n        in. Sed rhoncus mollis diam, sit amet facilisis lectus blandit at.\n      </p>\n    </div>\n  );\n}\n","import React from 'react';\n\n\nexport default function Portfolio({ webSites }) {\n  return (\n    \n    <div>\n      <h1>Portfolio</h1>\n      <div className=\"web-sites\">\n        {/* Here we use the map method to iterate through each user and return a new array of list items for each user */}\n        {webSites.map((webSite) => (\n          <div>\n          <h3 className=\"web-sites-item\" key={webSite.title}>{webSite.title}</h3>\n          <img src={webSite.img} alt={webSite.title} />\n          <p>{webSite.description}</p>\n          </div>\n          // <img src={weather} alt=\"Weather Dashboard\"></img>\n          // <li className=\"web-sites-item\" key={webSite.title}>\n          //   {`${webSite.title} ${webSite.img} (${webSite.description})`}\n          // </li>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\n\nexport default function Contact() {\n  // Here we set two state variables for firstName and lastName using `useState`\n  const [userName, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const error = \"please fill out all fields\";\n\n  const handleInputChange = (e) => {\n    // Getting the value and name of the input which triggered the change\n    const { target } = e;\n    const inputType = target.name;\n    const inputValue = target.value;\n\n    // Ternary statement that will call either setFirstName or setLastName based on what field the user is typing in\n    if (inputType === 'email') {\n      setEmail(inputValue);\n    } else if (inputType === 'userName') {\n      setUserName(inputValue);\n    } else {\n      setMessage(inputValue);\n    }\n  };\n\n  const handleFormSubmit = (e) => {\n    // Preventing the default behavior of the form submit (which is to refresh the page)\n    e.preventDefault();\n\n    if (!email || !userName || !message) {\n      setErrorMessage(error);\n      // We want to exit out of this code block if something is wrong so that the user can correct it\n      return;\n      // Then we check to see if the password is not valid. If so, we set an error message regarding the password.\n    }\n\n    // Alert the user their first and last name, clear the inputs\n    alert(`Thank you for your message, ${userName}.`);\n    setUserName('');\n    setEmail('');\n    setMessage('');\n  };\n\n  return (\n    <div>\n      <p>\n        Hello {userName}\n      </p>\n      <form className=\"form\">\n        <input\n          value={userName}\n          name=\"userName\"\n          onChange={handleInputChange}\n          type=\"text\"\n          placeholder=\"enter user name\"\n        />\n        <input\n          value={email}\n          name=\"email\"\n          onChange={handleInputChange}\n          type=\"text\"\n          placeholder=\"enter email address\"\n        />\n        <input\n          value={message}\n          name=\"message\"\n          onChange={handleInputChange}\n          type=\"text\"\n          placeholder=\"type message here\"\n        />\n        <button type=\"button\" onClick={handleFormSubmit}>\n          Submit\n        </button>\n      </form>\n      {errorMessage && (\n        <div>\n          <p className=\"error-text\">{errorMessage}</p>\n        </div>\n      )}\n    </div>\n  );\n}","import React from 'react'\n\nconst Footer = () => {\n  return (\n    <div>\n      <p> this is a footer </p>\n    </div>\n  )\n}\n\nexport default Footer\n","import howl from './assets/howl.jpg';\nimport hunt from './assets/hunt.jpg';\nimport pack from './assets/pack.jpg';\n\nconst webSites = [\n  {\n    title:  'howling',\n    img: howl,\n    description: 'communication skills'\n  },\n  {\n    title:  'packing',\n    img: hunt,\n    description: 'find ways to live together'\n  },\n  {\n    title:  'hunting',\n    img: pack,\n    description: 'always be hunting!'\n  }\n];\n\nexport default webSites;","export default __webpack_public_path__ + \"static/media/howl.46f952b2.jpg\";","export default __webpack_public_path__ + \"static/media/hunt.8938fd2b.jpg\";","export default __webpack_public_path__ + \"static/media/pack.b2cf008c.jpg\";","import React, { useState } from 'react';\nimport Header from './Header';\nimport NavTabs from './NavTabs'\nimport About from './pages/About';\nimport Portfolio from './pages/Portfolio';\nimport Contact from './pages/Contact';\nimport Footer from './Footer';\n\nimport webSites from '../webSites';\nexport default function PortfolioContainer() {\n  const [tab, setTab] = useState (\"About\");\n\n  // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\n  const renderPage = () => {\n    if (tab === 'About') {\n      return <About />;\n    }\n    if (tab === 'Portfolio') {\n      return <Portfolio webSites={webSites}/>;\n    }\n    return <Contact />;\n  };\n\n  const changeTab = (page) => setTab(page);\n\n  return (\n    <div>\n\n      {/* Here we are calling the renderPage method which will return a component  */}\n      <body>\n        <Header\n        />\n        <NavTabs tab={tab} changeTab={changeTab} />\n        <div> {renderPage()}</div>\n        <Footer />\n      </body>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PortfolioContainer from \"./components/PortfolioContainer\";\n\n\n// The state of the app is based on the page selected from the navigation list. because the state needs to be referenced by several components it is added to the app.js file to make it global\n\nfunction App(){\n\n\n  return (\n    <div className=\"container\">\n      <PortfolioContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}